/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodResourceEventSource : ResourceEventSource refers to a event-source for K8s resource related events.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodResourceEventSource {
    /// EventTypes is the list of event type to watch. Possible values are - ADD, UPDATE and DELETE.
    #[serde(rename = "eventTypes", skip_serializing_if = "Option::is_none")]
    pub event_types: Option<Vec<String>>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodResourceFilter>>,
    #[serde(rename = "groupVersionResource", skip_serializing_if = "Option::is_none")]
    pub group_version_resource: Option<Box<crate::models::IoPeriodK8sPeriodApimachineryPeriodPkgPeriodApisPeriodMetaPeriodV1PeriodGroupVersionResource>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

impl IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodResourceEventSource {
    /// ResourceEventSource refers to a event-source for K8s resource related events.
    pub fn new() -> IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodResourceEventSource {
        IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodResourceEventSource {
            event_types: None,
            filter: None,
            group_version_resource: None,
            metadata: None,
            namespace: None,
        }
    }
}


