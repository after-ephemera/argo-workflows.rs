/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTrigger {
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTriggerParameter>>,
    #[serde(rename = "policy", skip_serializing_if = "Option::is_none")]
    pub policy: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTriggerPolicy>>,
    #[serde(rename = "rateLimit", skip_serializing_if = "Option::is_none")]
    pub rate_limit: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodRateLimit>>,
    #[serde(rename = "retryStrategy", skip_serializing_if = "Option::is_none")]
    pub retry_strategy: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodBackoff>>,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTriggerTemplate>>,
}

impl IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTrigger {
    pub fn new() -> IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTrigger {
        IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodTrigger {
            parameters: None,
            policy: None,
            rate_limit: None,
            retry_strategy: None,
            template: None,
        }
    }
}


