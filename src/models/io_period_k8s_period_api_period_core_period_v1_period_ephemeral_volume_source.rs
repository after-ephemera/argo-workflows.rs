/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEphemeralVolumeSource : Represents an ephemeral volume that is handled by a normal storage driver.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEphemeralVolumeSource {
    #[serde(rename = "volumeClaimTemplate", skip_serializing_if = "Option::is_none")]
    pub volume_claim_template: Option<Box<crate::models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodPersistentVolumeClaimTemplate>>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEphemeralVolumeSource {
    /// Represents an ephemeral volume that is handled by a normal storage driver.
    pub fn new() -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEphemeralVolumeSource {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEphemeralVolumeSource {
            volume_claim_template: None,
        }
    }
}


