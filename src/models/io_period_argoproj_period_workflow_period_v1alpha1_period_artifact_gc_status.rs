/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactGcStatus : ArtifactGCStatus describes the result of the deletion



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactGcStatus {
    /// ArtifactResultsByNode maps Node name to result
    #[serde(rename = "artifactResultsByNode", skip_serializing_if = "Option::is_none")]
    pub artifact_results_by_node: Option<::std::collections::HashMap<String, crate::models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactResultNodeStatus>>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactGcStatus {
    /// ArtifactGCStatus describes the result of the deletion
    pub fn new() -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactGcStatus {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactGcStatus {
            artifact_results_by_node: None,
        }
    }
}


