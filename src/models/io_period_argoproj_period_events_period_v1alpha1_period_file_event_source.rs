/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodFileEventSource : FileEventSource describes an event-source for file related events.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodFileEventSource {
    #[serde(rename = "eventType", skip_serializing_if = "Option::is_none")]
    pub event_type: Option<String>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodEventSourceFilter>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "polling", skip_serializing_if = "Option::is_none")]
    pub polling: Option<bool>,
    #[serde(rename = "watchPathConfig", skip_serializing_if = "Option::is_none")]
    pub watch_path_config: Option<Box<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodWatchPathConfig>>,
}

impl IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodFileEventSource {
    /// FileEventSource describes an event-source for file related events.
    pub fn new() -> IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodFileEventSource {
        IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodFileEventSource {
            event_type: None,
            filter: None,
            metadata: None,
            polling: None,
            watch_path_config: None,
        }
    }
}


