/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodExprFilter {
    /// Expr refers to the expression that determines the outcome of the filter.
    #[serde(rename = "expr", skip_serializing_if = "Option::is_none")]
    pub expr: Option<String>,
    /// Fields refers to set of keys that refer to the paths within event payload.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<crate::models::IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodPayloadField>>,
}

impl IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodExprFilter {
    pub fn new() -> IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodExprFilter {
        IoPeriodArgoprojPeriodEventsPeriodV1alpha1PeriodExprFilter {
            expr: None,
            fields: None,
        }
    }
}


