/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodContainerSetRetryStrategy {
    /// Duration is the time between each retry, examples values are \"300ms\", \"1s\" or \"5m\". Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\".
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<String>,
    #[serde(rename = "retries")]
    pub retries: String,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodContainerSetRetryStrategy {
    pub fn new(retries: String) -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodContainerSetRetryStrategy {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodContainerSetRetryStrategy {
            duration: None,
            retries,
        }
    }
}


