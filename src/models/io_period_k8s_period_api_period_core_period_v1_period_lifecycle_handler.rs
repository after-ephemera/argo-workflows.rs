/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLifecycleHandler : LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLifecycleHandler {
    #[serde(rename = "exec", skip_serializing_if = "Option::is_none")]
    pub exec: Option<Box<crate::models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodExecAction>>,
    #[serde(rename = "httpGet", skip_serializing_if = "Option::is_none")]
    pub http_get: Option<Box<crate::models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodHttpGetAction>>,
    #[serde(rename = "tcpSocket", skip_serializing_if = "Option::is_none")]
    pub tcp_socket: Option<Box<crate::models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodTcpSocketAction>>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLifecycleHandler {
    /// LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
    pub fn new() -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLifecycleHandler {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLifecycleHandler {
            exec: None,
            http_get: None,
            tcp_socket: None,
        }
    }
}


